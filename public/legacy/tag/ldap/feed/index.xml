<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>LDAP &#8211; Andrew Morgan on Databases</title>
	<atom:link href="./feed/index.html" rel="self" type="application/rss+xml" />
	<link>./../../index.html</link>
	<description>Database technologies - especially around scalability and High Availability</description>
	<lastBuildDate>Sun, 11 Apr 2010 00:44:31 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	
	<item>
		<title>Charts from LDAP Con on LDAP access to MySQL Cluster</title>
		<link>./../../mysql-cluster/charts-from-ldap-con-on-ldap-access-to-mysql-cluster/index.html</link>
					<comments>./../../mysql-cluster/charts-from-ldap-con-on-ldap-access-to-mysql-cluster/index.html#respond</comments>
		
		<dc:creator><![CDATA[andrew]]></dc:creator>
		<pubDate>Sun, 11 Apr 2010 00:44:31 +0000</pubDate>
				<category><![CDATA[MySQL Cluster]]></category>
		<category><![CDATA[LDAP]]></category>
		<category><![CDATA[MySQL]]></category>
		<category><![CDATA[OpenLDAP]]></category>
		<guid isPermaLink="false">./../../index.html?p=1031</guid>

					<description><![CDATA[At last year&#8217;s LDAP-Con event, Ludo from OpenDS and Howard from OpenLDAP presented on the work that they&#8217;d done on using MySQL Cluster as the scalable, real-time data store for LDAP directories (going directly to the NDB API rather than using SQL). Symas now provide their implementation (back-ndb) for OpenLDAP. You can view the charts]]></description>
										<content:encoded><![CDATA[<p>At last year&#8217;s LDAP-Con event, Ludo from OpenDS and Howard from OpenLDAP presented on the work that they&#8217;d done on using MySQL Cluster as the scalable, real-time data store for LDAP directories (going directly to the NDB API rather than using SQL). Symas now provide their implementation (back-ndb) for OpenLDAP.</p>
<p>You can view the charts at <a href="http://www.mysql.com/customers/view/?id=1041" target="_blank">http://www.mysql.com/customers/view/?id=1041</a></p>
]]></content:encoded>
					
					<wfw:commentRss>./../../mysql-cluster/charts-from-ldap-con-on-ldap-access-to-mysql-cluster/feed/index.html</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Accessing the same data through LDAP and SQL</title>
		<link>./../../mysql-cluster/accessing-the-same-data-through-ldap-and-sql/index.html</link>
					<comments>./../../mysql-cluster/accessing-the-same-data-through-ldap-and-sql/index.html#respond</comments>
		
		<dc:creator><![CDATA[andrew]]></dc:creator>
		<pubDate>Fri, 09 Oct 2009 13:25:41 +0000</pubDate>
				<category><![CDATA[MySQL Cluster]]></category>
		<category><![CDATA[LDAP]]></category>
		<category><![CDATA[MySQL]]></category>
		<category><![CDATA[MySQL Cluster CGE]]></category>
		<category><![CDATA[OpenLDAP]]></category>
		<guid isPermaLink="false">./../../index.html?p=581</guid>

					<description><![CDATA[OpenLDAP includes a driver that allows it to store and access data held in MySQL Cluster. It uses the NDB-API to access the database and so the performance is extremely good. One of the great things about the solution is that it lets you simultaneously access the same data through both LDAP and SQL (or]]></description>
										<content:encoded><![CDATA[<p><a href="./../../wp-content/uploads/2009/10/LDAP-and-SQL-access-to-Cluster.jpg"><img fetchpriority="high" decoding="async" class="alignright size-medium wp-image-595" title="LDAP and SQL access to Cluster" src="./../../wp-content/uploads/2009/10/LDAP-and-SQL-access-to-Cluster-300x266.jpg" alt="LDAP and SQL access to Cluster" width="300" height="266" srcset="./../../wp-content/uploads/2009/10/LDAP-and-SQL-access-to-Cluster-300x266.jpg 300w, ./../../wp-content/uploads/2009/10/LDAP-and-SQL-access-to-Cluster.jpg 567w" sizes="(max-width: 300px) 100vw, 300px" /></a>OpenLDAP includes a driver that allows it to store and access data held in MySQL Cluster. It uses the NDB-API to access the database and so the performance is extremely good. One of the great things about the solution is that it lets you simultaneously access the same data through both LDAP and SQL (or the NDB-API or any of the MySQL connectors). This article gives an example of how this can be done. </p>
<h3>Prerequisites:</h3>
<p>This article assumes that you&#8217;ve already installed MySQL Cluster  &#8211; if that isn&#8217;t the case then please first refer to &#8220;<a href="./../../mysql-cluster/creating-a-simple-cluster-on-a-single-linux-host/index.html" target="_blank">Creating a simple Cluster on a single LINUX host</a>&#8221; or &#8220;<a href="./../../mysql-cluster/deploying-mysql-cluster-over-multiple-hosts/index.html" target="_blank">Deploying MySQL Cluster over multiple hosts</a>&#8220;.</p>
<p>Once MySQL Cluster has been installed, you need to build and configure OpenLDAP to use MySQL Cluster (alternatively, you can engage Symas to provide you pre-built binaries); Johan provides a good walkthrough of this in his Blog &#8220;<a href="http://www.severalnines.com/blog/openldap.php" target="_blank">OpenLDAP for MySQL Cluster</a>&#8220;. One extra note is that slapd must be run as root due to the ports it accesses. That Blog entry also explains how to test that everything is working &#8211; do that before proceeding to the next step.</p>
<h3>Example 1 Extending the LDAP Data Schema and reading/writing the data through LDAP and SQL:</h3>
<p>The standard schemas that come with OpenLDAP will be suitable for lots of scenarios that have typically used directories. In this article, we&#8217;re interested in other applications where we need to store and access additional attributes.</p>
<p>We create a new schema file &#8220;<a href="./../../wp-content/uploads/2009/10/x-clusterdb-hlr.schema">x-clusterdb-hlr.schema</a>&#8221; that represents some of the data that would be needed for an HLR application:</p>
<pre style="padding-left: 30px;color: #993300;font-size: 11px">attributetype ( 1.3.6.1.4.1.33913.1.0 NAME 'clusterdbsubid'
DESC 'Represents the internal subscriber identifier'
EQUALITY integerMatch
SYNTAX 1.3.6.1.4.1.1466.115.121.1.27{8})

attributetype ( 1.3.6.1.4.1.33913.1.1 NAME 'clusterdbimsi'
DESC 'Represents the IMSI associated with a subscriber'
EQUALITY numericStringMatch
SUBSTR numericStringSubstringsMatch
SYNTAX 1.3.6.1.4.1.1466.115.121.1.36{15})

attributetype ( 1.3.6.1.4.1.33913.1.2 NAME 'clusterdbmsisdn'
DESC 'Represents the MSISDN associated with a subscriber'
EQUALITY numericStringMatch
SUBSTR numericStringSubstringsMatch
SYNTAX 1.3.6.1.4.1.1466.115.121.1.36{15})

attributetype ( 1.3.6.1.4.1.33913.1.3 NAME 'clusterdbvlrnumber'
DESC 'Represents the visited VLR number associated with a subscriber'
EQUALITY numericStringMatch
SUBSTR numericStringSubstringsMatch
SYNTAX 1.3.6.1.4.1.1466.115.121.1.36{15})

attributetype ( 1.3.6.1.4.1.33913.1.4 NAME 'clusterdbsmscnumber'
DESC 'Represents the SMS SC that handles messages for a subscriber'
EQUALITY numericStringMatch
SUBSTR numericStringSubstringsMatch
SYNTAX 1.3.6.1.4.1.1466.115.121.1.36{15})

attributetype ( 1.3.6.1.4.1.33913.1.5 NAME 'clusterdbsmscount'
DESC 'Represents the number of SMS messages waiting for the subscriber'
EQUALITY integerMatch
SYNTAX 1.3.6.1.4.1.1466.115.121.1.27{4})

attributetype ( 1.3.6.1.4.1.33913.1.6 NAME 'clusterdbcfu'
DESC 'Represents the Call Forwarding Unconditional number for the sub'
EQUALITY numericStringMatch
SUBSTR numericStringSubstringsMatch
SYNTAX 1.3.6.1.4.1.1466.115.121.1.36{15})

attributetype ( 1.3.6.1.4.1.33913.1.7 NAME 'clusterdbcfnryt'
DESC 'Represents the CFNRY timer'
EQUALITY numericStringMatch
SUBSTR numericStringSubstringsMatch
SYNTAX 1.3.6.1.4.1.1466.115.121.1.36{15})

attributetype ( 1.3.6.1.4.1.33913.1.8 NAME 'clusterdbreleasemin'
DESC 'Represents the software release (minor) of the subscriber data'
EQUALITY numericStringMatch
SUBSTR numericStringSubstringsMatch
SYNTAX 1.3.6.1.4.1.1466.115.121.1.36{15})

attributetype ( 1.3.6.1.4.1.33913.1.9 NAME 'clusterdbreleasemaj'
DESC 'Represents the software release (major) of the subscriber data'
EQUALITY numericStringMatch
SUBSTR numericStringSubstringsMatch
SYNTAX 1.3.6.1.4.1.1466.115.121.1.36{15})

objectclass ( 1.3.6.1.4.1.33913.1 NAME 'clusterdbhlrrecord'
DESC 'The HLR data record for a subscriber'
MUST (clusterdbsubid $ clusterdbimsi)
MAY (clusterdbmsisdn $ clusterdbvlrnumber $ clusterdbsmscnumber $ clusterdbsmscount $ clusterdbcfu $ clusterdbcfnryt))</pre>
<p>One thing to note is that the identifier for each objectclass or attributetype has to be globally unique and you should apply for a unique prefix for your organization from the <a href="http://pen.iana.org/pen/PenApplication.page" target="_blank">Internet Assigned Numbers Authority</a> &#8211; the enterprise ID for clusterdb.com is  33913 and so any identifier starting with 1.3.6.1.4.1.33913 has been defined by clusterdb.com. This article does not attempt to explain exactly how to define your own schema; you can use this example as a starting point and then refer to the <a href="http://www.openldap.org/doc/admin24/schema.html#Extending%20Schema" target="_blank">OpenLDAP chapter on extending schemas</a>.</p>
<p>To use this schema, you need to copy the schema file to the &#8216;schema&#8217; directory in the OpenLDAP installation directory &#8211; for example &#8220;/usr/local/openldap/etc/openldap/schema&#8221;. The &#8220;<a href="./../../wp-content/uploads/2009/10/slapd.conf">slapd.conf</a>&#8221; file also needs updating/replacing to include the new schema (and in our case, change the domain and database name to clusterdb):</p>
<pre style="padding-left: 30px;color: #993300;font-size: 11px">include      /usr/local/openldap/etc/openldap/schema/core.schema
include     /usr/local/openldap/etc/openldap/schema/cosine.schema
include     /usr/local/openldap/etc/openldap/schema/inetorgperson.schema
include     /usr/local/openldap/etc/openldap/schema/x-clusterdb-hlr.schema

pidfile        /usr/local/openldap/var/run/slapd.pid
argsfile    /usr/local/openldap/var/run/slapd.args

#NDB database defintions
database ndb
suffix "dc=clusterdb,dc=com"
rootdn "cn=Manager,dc=clusterdb,dc=com"
rootpw secret
directory /usr/local/openldap/var/openldap-data
dbconnect localhost:1186
dbhost localhost
dbname clusterdb
dbuser root
dbpass ""
dbconnections 2
attrset billy clusterdbreleasemaj,clusterdbreleasemin</pre>
<p>For this to take effect, you now need to stop and restart the slapd process.</p>
<p>To test that everything is working as intended, we need some test data covering the new schema &#8211; create a file called &#8220;<a href="./../../wp-content/uploads/2009/10/add_clusterdb_hlr.txt">add_clusterdb_hlr.txt</a>&#8220;:</p>
<pre style="padding-left: 30px;color: #993300;font-size: 11px">dn: dc=clusterdb,dc=com
dc: clusterdb
objectClass: dcObject
objectClass: organization
description: HLR operator
o: GSM PlC

dn: clusterdbsubid=12,dc=clusterdb,dc=com
objectclass: clusterdbhlrrecord
clusterdbsubid: 12
clusterdbimsi: 456123123456789
clusterdbmsisdn: 611231234512345
clusterdbvlrnumber: 611230000000000
clusterdbsmscnumber: 611230000000001
clusterdbsmscount: 2

dn: clusterdbsubid=97,dc=clusterdb,dc=com
objectclass: clusterdbhlrrecord
clusterdbsubid: 97
clusterdbimsi: 456123123456788
clusterdbmsisdn: 611231234512344
clusterdbvlrnumber: 611230000000000
clusterdbsmscnumber: 611230000000001
clusterdbsmscount: 0</pre>
<p>Use the slapadd tool to load the data:</p>
<pre style="padding-left: 30px;color: #993300;font-size: 11px">[billy@ws1 OpenLDAP]$ slapadd -l add_clusterdb_hlr.txt
091009 11:49:26 [Note] NDB Binlog: CREATE TABLE Event: REPL$clusterdb/OL_dn2id
091009 11:49:26 [Note] NDB Binlog: CREATE TABLE Event: REPL$clusterdb/OL_nextid
091009 11:49:27 [Note] NDB Binlog: CREATE TABLE Event: REPL$clusterdb/OL_opattrs
091009 11:49:28 [Note] NDB Binlog: CREATE TABLE Event: REPL$clusterdb/billy
091009 11:49:28 [Note] NDB Binlog: CREATE TABLE Event: REPL$clusterdb/dcObject
091009 11:49:29 [Note] NDB Binlog: CREATE TABLE Event: REPL$clusterdb/organization
_###########           59.97% eta        elapsed                 spd 258.2  /s 091009 11:49:30 [Note] NDB Binlog: CREATE TABLE Event: REPL$clusterdb/clusterdbhlrrecord
-#################### 100.00% eta   none elapsed             02s spd 313.5  /s
Closing DB...</pre>
<p>Behind the scenes, OpenLDAP has now created the &#8220;clusterdb&#8221; database as well as a number of tables:</p>
<pre style="padding-left: 30px;color: #993300;font-size: 11px">mysql&gt; use clusterdb;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A
[billy@ws1 OpenLDAP]$ mysql -u root
Welcome to the MySQL monitor.  Commands end with ; or g.
Your MySQL connection id is 13
Server version: 5.1.37-ndb-7.0.8a Source distribution

Type 'help;' or 'h' for help. Type 'c' to clear the current input statement.

mysql&gt; use clusterdb;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql&gt; show tables;
+---------------------+
| Tables_in_clusterdb |
+---------------------+
| OL_dn2id            |
| OL_nextid           |
| OL_opattrs          |
| billy               |
| clusterdbhlrrecord  |
| dcObject            |
| organization        |
+---------------------+
7 rows in set (0.00 sec)</pre>
<p>Again, this article doesn&#8217;t attempt to explain all of details around all of these tables but the 2 key ones here are OL_dn2id and clusterdbhlrrecord. The OL_dn2id table is used to map from a distinguished name to an entry-id (eid) which is then used a key into the table that actually holds the data (in our example, clusterdbhlrrecord). A table is created for each objectclass in the LDDAP schema that we&#8217;ve added data to (in this example, that means organization and clusterdbhlrrecord:</p>
<pre style="padding-left: 30px;color: #993300;font-size: 11px">mysql&gt; select * from OL_dn2id;
+-----+-------------------------------+--------+--------------+-------------------+----+----+----+----+----+----+----+-----+-----+-----+-----+-----+-----+
| eid | object_classes                | a0     | a1           | a2                | a3 | a4 | a5 | a6 | a7 | a8 | a9 | a10 | a11 | a12 | a13 | a14 | a15 |
+-----+-------------------------------+--------+--------------+-------------------+----+----+----+----+----+----+----+-----+-----+-----+-----+-----+-----+
|   1 |  dcObject organization @ top  | dc=com | dc=clusterdb |                   |    |    |    |    |    |    |    |     |     |     |     |     |     |
|   2 |  clusterdbhlrrecord @ top     | dc=com | dc=clusterdb | clusterdbsubid=12 |    |    |    |    |    |    |    |     |     |     |     |     |     |
|   3 |  clusterdbhlrrecord @ top     | dc=com | dc=clusterdb | clusterdbsubid=97 |    |    |    |    |    |    |    |     |     |     |     |     |     |
+-----+-------------------------------+--------+--------------+-------------------+----+----+----+----+----+----+----+-----+-----+-----+-----+-----+-----+
3 rows in set (0.00 sec)

mysql&gt; select * from clusterdbhlrrecord;
+-----+-----+----------------+-----------------+-----------------+--------------------+---------------------+-------------------+--------------+-----------------+
| eid | vid | clusterdbsubid | clusterdbimsi   | clusterdbmsisdn | clusterdbvlrnumber | clusterdbsmscnumber | clusterdbsmscount | clusterdbcfu | clusterdbcfnryt |
+-----+-----+----------------+-----------------+-----------------+--------------------+---------------------+-------------------+--------------+-----------------+
|   3 |   0 | 97             | 456123123456788 | 611231234512344 | 611230000000000    | 611230000000001     | 0                 | NULL         | NULL            |
|   2 |   0 | 12             | 456123123456789 | 611231234512345 | 611230000000000    | 611230000000001     | 2                 | NULL         | NULL            |
+-----+-----+----------------+-----------------+-----------------+--------------------+---------------------+-------------------+--------------+-----------------+
2 rows in set (0.00 sec)</pre>
<p>Clearly, the application can now use LDAP or SQL to read and modify these same fields.</p>
<h3>Example 2 Only exposing a subset of the data through LDAP</h3>
<p>There are some restrictions on the schema created in MySQL Cluster by OpenLDAP &#8211; for example, all columns are varchars. It could be that your application needs a richer data schema when using SQL to access the data, including data that doesn&#8217;t need accessing through LDAP. The simplest way to do this would be to have some tables in the data base that aren&#8217;t included in the LDAP schema &#8211; OpenLDAP just won&#8217;t see them.</p>
<p>Another option is to have OpenLDAP only see a subset of the columns in a table (it only sees those fields that are in the LDAP schema). This is fairly straightforward to acheive as OpenLDAP only creates the database and tables if they don&#8217;t already exist and it is happy to ignore any columns that are not included. For simplicity, we assume that you&#8217;ve executed Example 1 and then we remove the database and then recreate it by hand (and then you should restart slapd):</p>
<pre style="padding-left: 30px;color: #993300;font-size: 11px">mysql&gt; drop database clusterdb;
Query OK, 7 rows affected (4.41 sec)

mysql&gt; create database clusterdb;
Query OK, 1 row affected (0.00 sec)

mysql&gt; use clusterdb;
Database changed

mysql&gt; CREATE TABLE clusterdbhlrrecord (
-&gt; eid bigint(20) unsigned NOT NULL,
-&gt; vid int(10) unsigned NOT NULL,
-&gt; clusterdbsubid varchar(8) DEFAULT NULL,
-&gt; clusterdbimsi varchar(15) DEFAULT NULL,
-&gt; clusterdbmsisdn varchar(15) DEFAULT NULL,
-&gt; clusterdbvlrnumber varchar(15) DEFAULT NULL,
-&gt; clusterdbsmscnumber varchar(15) DEFAULT NULL,
-&gt; clusterdbsmscount varchar(4) DEFAULT NULL,
-&gt; clusterdbcfu varchar(15) DEFAULT NULL,
-&gt; clusterdbcfnryt varchar(15) DEFAULT NULL,
-&gt; contractstart date default null,
-&gt; PRIMARY KEY (eid,vid))
-&gt; engine=ndb partition by key (eid);</pre>
<p>and then add the same data (which doesn&#8217;t contain &#8220;contractstart&#8221;) as in Example 1 and then use LDAP to check that it has been stored correctly and can be retrieved:</p>
<pre style="padding-left: 30px;color: #993300;font-size: 11px">[billy@ws1 OpenLDAP]$ slapadd -l add_clusterdb_hlr.txt
091009 12:41:44 [Note] NDB Binlog: CREATE TABLE Event: REPL$clusterdb/OL_dn2id
091009 12:41:45 [Note] NDB Binlog: CREATE TABLE Event: REPL$clusterdb/OL_nextid
091009 12:41:46 [Note] NDB Binlog: CREATE TABLE Event: REPL$clusterdb/OL_opattrs
091009 12:41:46 [Note] NDB Binlog: CREATE TABLE Event: REPL$clusterdb/billy
091009 12:41:47 [Note] NDB Binlog: CREATE TABLE Event: REPL$clusterdb/dcObject
091009 12:41:48 [Note] NDB Binlog: CREATE TABLE Event: REPL$clusterdb/organization
.#################### 100.00% eta   none elapsed                 spd 627.0  /s
Closing DB...

[billy@ws1 OpenLDAP]$ ldapsearch -x -b 'dc=clusterdb,dc=com'
# extended LDIF
#
# LDAPv3
# base &lt;dc=clusterdb,dc=com&gt; with scope subtree
# filter: (objectclass=*)
# requesting: ALL
#

# 97, clusterdb.com
dn: clusterdbsubid=97,dc=clusterdb,dc=com
objectClass: clusterdbhlrrecord
clusterdbsubid: 97
clusterdbimsi: 456123123456788
clusterdbmsisdn: 611231234512344
clusterdbvlrnumber: 611230000000000
clusterdbsmscnumber: 611230000000001
clusterdbsmscount: 0

# clusterdb.com
dn: dc=clusterdb,dc=com
objectClass: dcObject
objectClass: organization
dc: clusterdb
o: GSM PlC
description: HLR operator

# 12, clusterdb.com
dn: clusterdbsubid=12,dc=clusterdb,dc=com
objectClass: clusterdbhlrrecord
clusterdbsubid: 12
clusterdbimsi: 456123123456789
clusterdbmsisdn: 611231234512345
clusterdbvlrnumber: 611230000000000
clusterdbsmscnumber: 611230000000001
clusterdbsmscount: 2

# search result
search: 2
result: 0 Success

# numResponses: 4
# numEntries: 3</pre>
<p>As you can see, the &#8216;contractstart&#8217; field is ignored by OpenLDAP but we can work with it through SQL:</p>
<pre style="padding-left: 30px;color: #993300;font-size: 11px">[billy@ws1 OpenLDAP]$ mysql -u root;
Welcome to the MySQL monitor.  Commands end with ; or g.
Your MySQL connection id is 24
Server version: 5.1.37-ndb-7.0.8a Source distribution

Type 'help;' or 'h' for help. Type 'c' to clear the current input statement.

mysql&gt; use clusterdb;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql&gt; update clusterdbhlrrecord set contractstart='2009-01-04' where clusterdbsubid=12;
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql&gt; select * from clusterdbhlrrecord;
+-----+-----+----------------+-----------------+-----------------+--------------------+---------------------+-------------------+--------------+-----------------+---------------+
| eid | vid | clusterdbsubid | clusterdbimsi   | clusterdbmsisdn | clusterdbvlrnumber | clusterdbsmscnumber | clusterdbsmscount | clusterdbcfu | clusterdbcfnryt | contractstart |
+-----+-----+----------------+-----------------+-----------------+--------------------+---------------------+-------------------+--------------+-----------------+---------------+
|   3 |   0 | 97             | 456123123456788 | 611231234512344 | 611230000000000    | 611230000000001     | 0                 | NULL         | NULL            | NULL          |
|   2 |   0 | 12             | 456123123456789 | 611231234512345 | 611230000000000    | 611230000000001     | 2                 | NULL         | NULL            | 2009-01-04    |
+-----+-----+----------------+-----------------+-----------------+--------------------+---------------------+-------------------+--------------+-----------------+---------------+</pre>
<h3>Example 3 Making rows added through SQL visible through OpenLDAP</h3>
<p>This example builds upon  Example 2 by showing how rows can be added to the clusterdbhlrrecord and then be accessed using LDAP.</p>
<p>The first step is to just add the row:</p>
<pre style="padding-left: 30px;color: #993300;font-size: 11px">mysql&gt; insert into clusterdbhlrrecord values (4,0,101,456231234554321,61777777777,611230000000000,
-&gt; 611230000000000,0,NULL,NULL,'2008-01-01');
Query OK, 1 row affected (0.00 sec)</pre>
<p>When we try to read this entry through LDAP, it can&#8217;t be found:</p>
<pre style="padding-left: 30px;color: #993300;font-size: 11px">[billy@ws1 OpenLDAP]$ ldapsearch -x -b 'clusterdbsubid=101,dc=clusterdb,dc=com'
# extended LDIF
#
# LDAPv3
# base &lt;clusterdbsubid=101,dc=clusterdb,dc=com&gt; with scope subtree
# filter: (objectclass=*)
# requesting: ALL
#

# search result
search: 2
result: 32 No such object
matchedDN: dc=clusterdb,dc=com

# numResponses: 1</pre>
<p>The reason for this is that this row doesn&#8217;t yet have a corresponding entry in the OL_dn2id table; that can now be fixed:</p>
<pre style="padding-left: 30px;color: #993300;font-size: 11px">mysql&gt; insert into OL_dn2id values (4,'clusterdbhlrrecord @ top','dc=com','dc=clusterdb','clusterdbsubid=101','','','','','','','','','','','','','');
Query OK, 1 row affected (0.01 sec)

[billy@ws1 OpenLDAP]$ ldapsearch -x -b 'clusterdbsubid=101,dc=clusterdb,dc=com'
# extended LDIF
#
# LDAPv3
# base &lt;clusterdbsubid=101,dc=clusterdb,dc=com&gt; with scope subtree
# filter: (objectclass=*)
# requesting: ALL
#

# 101, clusterdb.com
dn: clusterdbsubid=101,dc=clusterdb,dc=com
objectClass: clusterdbhlrrecord
clusterdbsubid: 101
clusterdbimsi: 456231234554321
clusterdbmsisdn: 61777777777
clusterdbvlrnumber: 611230000000000
clusterdbsmscnumber: 611230000000000
clusterdbsmscount: 0

# search result
search: 2
result: 0 Success

# numResponses: 2
# numEntries: 1</pre>
<p>If you want to hide this extra step from the application then you can of course use stored procedures to automatically add the extra row to OL_dn2id.</p>
]]></content:encoded>
					
					<wfw:commentRss>./../../mysql-cluster/accessing-the-same-data-through-ldap-and-sql/feed/index.html</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Upcoming Webinar: Guide to Scaling OpenLDAP: MySQL Cluster as Data Store for OpenLDAP Directories</title>
		<link>./../../mysql-cluster/upcoming-webinar-guide-to-scaling-openldap-mysql-cluster-as-data-store-for-openldap-directories/index.html</link>
					<comments>./../../mysql-cluster/upcoming-webinar-guide-to-scaling-openldap-mysql-cluster-as-data-store-for-openldap-directories/index.html#respond</comments>
		
		<dc:creator><![CDATA[andrew]]></dc:creator>
		<pubDate>Fri, 19 Jun 2009 10:27:17 +0000</pubDate>
				<category><![CDATA[MySQL Cluster]]></category>
		<category><![CDATA[Howard Chu]]></category>
		<category><![CDATA[LDAP]]></category>
		<category><![CDATA[MySQL]]></category>
		<category><![CDATA[OpenLDAP]]></category>
		<category><![CDATA[Symas]]></category>
		<guid isPermaLink="false">./../../index.html?p=199</guid>

					<description><![CDATA[From MySQL Cluster 7.0, it&#8217;s possible to use Cluster as the Data Store for the OpenLDAP Directory Server &#8211; this has 2 very signifficant implications: All of the advantages of MySQL Cluster (scalability, high availability and cost) can now be applied to your directory server deployment The same data held in a MySQL Cluster database]]></description>
										<content:encoded><![CDATA[<div id="attachment_201" style="width: 234px" class="wp-caption alignright"><a href="./../../wp-content/uploads/2009/06/howardchumysql.jpg"><img decoding="async" aria-describedby="caption-attachment-201" class="size-medium wp-image-201" title="Howard Chu with Johan at MySQL UC 2009" src="./../../wp-content/uploads/2009/06/howardchumysql-224x300.jpg" alt="Howard Chu with Johan Andersson at MySQL User Conference 2009" width="224" height="300" srcset="./../../wp-content/uploads/2009/06/howardchumysql-224x300.jpg 224w, ./../../wp-content/uploads/2009/06/howardchumysql.jpg 448w" sizes="(max-width: 224px) 100vw, 224px" /></a><p id="caption-attachment-201" class="wp-caption-text">Howard Chu with Johan Andersson at MySQL User Conference 2009</p></div>
<p>From MySQL Cluster 7.0, it&#8217;s possible to use Cluster as the Data Store for the OpenLDAP Directory Server &#8211; this has 2 very signifficant implications:</p>
<ol>
<li>All of the advantages of MySQL Cluster (scalability, high availability and cost) can now be applied to your directory server deployment</li>
<li>The same data held in a MySQL Cluster database can now be accessed simultaneously using LDAP in addition to SQL, the native C++ interface and all of the connectors available for MySQL</li>
</ol>
<p>Howard Chu (Chief Architect of the OpenLDAP project and CTO of Symas) will be presenting a Webinar on Wednesday together with Mat Keep from MySQL. I&#8217;ll be helping with the Q&amp;A.</p>
<h3>Webinar details&#8230;</h3>
<p>Wednesday, June 24, 2009</p>
<p>Discover how to fully exploit distributed subscriber and network data, and how to enhance your investments in OpenLDAP technology by tuning into this webinar, jointly run by OpenLDAP and MySQL.</p>
<p>In this webinar, the Chief Architect of OpenLDAP will demonstrate where this solution can be used, and how to get started with MySQL Cluster as the directory data store.</p>
<p>MySQL Cluster has been widely deployed for subscriber databases within Communications Service Provider networks. Extending this capability, MySQL Cluster Carrier Grade Edition 7.0 can be deployed as the back-end data store for LDAP directory servers.</p>
<p>Using industry standard LDAP directories with MySQL Cluster serving as the directory data store, operators can leverage standard LDAP interfaces to consolidate data stores, and for the authentication and authorization of devices and subscribers with real-time performance and carrier-grade availability requirements. The result is total solution that reduces cost, risk and complexity for large, transaction-intensive directory data sets.</p>
<h4>WHEN:</h4>
<p style="padding-left: 30px;">Wednesday, June 24, 2009: 10:00 Pacific time (America)<br />
Wed, Jun 24:     07:00 Hawaii time<br />
Wed, Jun 24:     11:00 Mountain time (America)<br />
Wed, Jun 24:     12:00 Central time (America)<br />
Wed, Jun 24:     13:00 Eastern time (America)<br />
Wed, Jun 24:     17:00 UTC<br />
Wed, Jun 24:     18:00 Western European time<br />
Wed, Jun 24:     19:00 Central European time<br />
Wed, Jun 24:     20:00 Eastern European time</p>
<p>The presentation will be approximately 45 minutes long followed by Q&amp;A.</p>
]]></content:encoded>
					
					<wfw:commentRss>./../../mysql-cluster/upcoming-webinar-guide-to-scaling-openldap-mysql-cluster-as-data-store-for-openldap-directories/feed/index.html</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
