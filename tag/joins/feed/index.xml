<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>joins &#8211; Andrew Morgan on Databases</title>
	<atom:link href="./feed/index.html" rel="self" type="application/rss+xml" />
	<link>./../../index.html</link>
	<description>Database technologies - especially around scalability and High Availability</description>
	<lastBuildDate>Thu, 29 Apr 2010 15:03:25 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	
	<item>
		<title>Trying out MySQL Push-Down-Join (SPJ) preview</title>
		<link>./../../mysql-cluster/trying-out-mysql-push-down-join-spj-preview/index.html</link>
					<comments>./../../mysql-cluster/trying-out-mysql-push-down-join-spj-preview/index.html#respond</comments>
		
		<dc:creator><![CDATA[andrew]]></dc:creator>
		<pubDate>Thu, 29 Apr 2010 15:03:25 +0000</pubDate>
				<category><![CDATA[MySQL Cluster]]></category>
		<category><![CDATA[joins]]></category>
		<category><![CDATA[MySQL]]></category>
		<category><![CDATA[push down join]]></category>
		<category><![CDATA[spj]]></category>
		<guid isPermaLink="false">./../../index.html?p=1045</guid>

					<description><![CDATA[At the 2010 MySQL User Conference, Jonas Oreland presented on the work he&#8217;s been doing on improving the performance of joins when using MySQL Cluster &#8211; the slides are available for download. While not ready for production systems, a preview version is available for you to try out. The purpose of this blog is to]]></description>
										<content:encoded><![CDATA[<p>At the 2010 MySQL User Conference, <a href="http://jonasoreland.blogspot.com/" target="_blank">Jonas Oreland </a>presented on the work he&#8217;s been doing on improving the performance of joins when using MySQL Cluster &#8211; <a href="http://assets.en.oreilly.com/1/event/36/MySQL%20Cluster%20and%20Pushdown-joins%20_In%20Pursuit%20of%20the%20Holy%20Grail_%20Presentation.pdf" target="_blank">the slides are available for download</a>. While <strong>not</strong> ready for production systems, a preview version is available for you to try out. The purpose of this blog is to step through  testing an example query as well as presenting the results (<strong>SPOILER:</strong> In one configuration, I got a 50x speedup!).</p>
<p>SPJ is by no means complete and there are a number of constraints as to which queries benefit (and I&#8217;ll give an example of one that didn&#8217;t). For details of the current (April 2010) software and limitations, check out <a href="http://assets.en.oreilly.com/1/event/36/MySQL%20Cluster%20and%20Pushdown-joins%20_In%20Pursuit%20of%20the%20Holy%20Grail_%20Presentation.pdf" target="_blank">Jonas&#8217;s slides </a>and then keep up to date by following his <a href="http://jonasoreland.blogspot.com/" target="_blank">blog</a>.</p>
<p>We&#8217;re anxious to get feedback &#8211; please feel free to post results as comments to this blog but also make sure that you send them to spj-feedback@sun.com &#8211; describing your schema, the query or queries you tested, the output from EXPLAIN and your before and after timings.</p>
<p>Joins in MySQL Cluster are implemented as nested-loop joins within the MySQL Server; this can be inefficient as it results in many trips to the data nodes to fetch the required data. SPJ works by pushing the join (actually a spec of the needed data) down into the data nodes where the data can be collected and sent back up to the MySQL Server much more efficiently.</p>
<p>For my tests, I used 2 different configurations. In both cases there are 2 data nodes running on 2 physical hosts. In the first configuration the MySQL Server resides on one of those 2 hosts. In the second configuration, the MySQL Server is moved to a virtual machine running on a 3rd host.</p>
<h3>Setting up the Cluster</h3>
<p>On each of the 3 hosts, I downloaded the software from <a href="ftp://ftp.mysql.com/pub/mysql/download/cluster_telco/mysql-5.1.44-ndb-7.1.3-spj-preview/" target="_blank">ftp://ftp.mysql.com/pub/mysql/download/cluster_telco/mysql-5.1.44-ndb-7.1.3-spj-preview/</a> and then compiled and installed it. If you&#8217;re not comfortable with that then you can find instructions in this <a href="./../../mysql-cluster/mysql-cluster-7-0-7-source-released/index.html" target="_blank">earlier blog</a> or if you&#8217;re used to using the tools from severalnines then check out the SPJ instructions on <a href="http://johanandersson.blogspot.com/2010/04/mysql-cluster-spj-preview-feedback_27.html" target="_blank">Johan&#8217;s blog</a>.</p>
<h3>Create the schema</h3>
<p>The 3 tables I used can be created with these commands from the mysql client:</p>
<pre style="padding-left: 30px;"><!-- BODY { FONT-FAMILY:Tahoma; FONT-SIZE:10pt } P { FONT-FAMILY:Tahoma; FONT-SIZE:10pt } DIV { FONT-FAMILY:Tahoma; FONT-SIZE:10pt } TD { FONT-FAMILY:Tahoma; FONT-SIZE:10pt } --><span style="color: #800000;">mysql&gt; create database clusterdb; use clusterdb;
mysql&gt; create table subs (sub_id int not null primary key,
dept int,country int) engine=ndb;
mysql&gt; create table department (id int not null primary key,
name int) engine=ndb;
mysql&gt; create table roles (dept int not null primary key,
role varchar (30)) engine=ndb;</span></pre>
<p>Each of these tables is then populated with 100,000 rows (<a href="./../../wp-content/uploads/2010/04/data.zip" target="_blank">the files can be downloaded from here</a>).</p>
<p>Once extracted, the data should be loaded into the database:</p>
<pre style="padding-left: 30px;"><span style="color: #800000;">mysql&gt; use clusterdb;</span></pre>
<pre style="padding-left: 30px;"><span style="color: #800000;">mysql&gt; load data local infile "/home/billy/Dropbox/LINUX/projects/SPJ/subs.csv"
replace into table subs fields terminated by ',';</span></pre>
<pre style="padding-left: 30px;"><span style="color: #800000;">mysql&gt; load data local infile  "/home/billy/Dropbox/LINUX/projects/SPJ/dept.csv"
 replace into table department fields terminated by ',';</span></pre>
<pre style="padding-left: 30px;"><span style="color: #800000;">mysql&gt; load data local infile  "/home/billy/Dropbox/LINUX/projects/SPJ/roles.csv"
 replace into table roles fields terminated by ',';</span></pre>
<h3>Running the tests (Config 1 &#8211; local mysqld)</h3>
<p>To get a baseline, ensure that SPJ is turned off:</p>
<pre style="padding-left: 30px;"><!-- BODY { FONT-FAMILY:Tahoma; FONT-SIZE:10pt } P { FONT-FAMILY:Tahoma; FONT-SIZE:10pt } DIV { FONT-FAMILY:Tahoma; FONT-SIZE:10pt } TD { FONT-FAMILY:Tahoma; FONT-SIZE:10pt } --><span style="color: #800000;">mysql&gt; set ndb_join_pushdown=off;</span></pre>
<p>and then get the output from EXPLAIN:</p>
<pre style="padding-left: 30px;"><span style="color: #800000;">mysql&gt; EXPLAIN SELECT count(*) FROM subs, department, roles WHERE subs.country=44 AND department.id=subs.dept AND roles.dept=department.name;
+----+-------------+------------+--------+---------------+---------+---------+---------------------------+--------+-----------------------------------+
| id | select_type | table      | type   | possible_keys | key     | key_len | ref                       | rows   | Extra                             |
+----+-------------+------------+--------+---------------+---------+---------+---------------------------+--------+-----------------------------------+
|  1 | SIMPLE      | subs       | ALL    | NULL          | NULL    | NULL    | NULL                      | 100000 | Using where with pushed condition |
|  1 | SIMPLE      | department | eq_ref | PRIMARY       | PRIMARY | 4       | clusterdb.subs.dept       |      1 |                                   |
|  1 | SIMPLE      | roles      | eq_ref | PRIMARY       | PRIMARY | 4       | clusterdb.department.name |      1 |                                   |
+----+-------------+------------+--------+---------------+---------+---------+---------------------------+--------+-----------------------------------+</span></pre>
<p>and then execute the query:</p>
<pre style="padding-left: 30px;"><span style="color: #800000;">mysql&gt; SELECT count(*) FROM subs, department, roles WHERE subs.country=44 AND department.id=subs.dept AND roles.dept=department.name;
+----------+
| count(*) |
+----------+
|    33334 |
+----------+
1 row in set (<span style="color: #ff6600;"><strong>9.08 sec</strong></span>)</span></pre>
<p>Now to see the benefits of SPJ, turn it on:</p>
<pre style="padding-left: 30px;"><span style="color: #800000;">mysql&gt; set ndb_join_pushdown=on;</span></pre>
<p>Check the output from EXPLAIN again:</p>
<pre style="padding-left: 30px;"><span style="color: #800000;">mysql&gt; EXPLAIN SELECT count(*) FROM subs, department, roles WHERE subs.country=44 AND department.id=subs.dept AND roles.dept=department.name;
+----+-------------+------------+--------+---------------+---------+---------+---------------------------+--------+--------------------------------------------------------------+
| id | select_type | table      | type   | possible_keys | key     | key_len | ref                       | rows   | Extra                                                        |
+----+-------------+------------+--------+---------------+---------+---------+---------------------------+--------+--------------------------------------------------------------+
|  1 | SIMPLE      | subs       | ALL    | NULL          | NULL    | NULL    | NULL                      | 100000 | Parent of 3 pushed join@1; Using where with pushed condition |
|  1 | SIMPLE      | department | eq_ref | PRIMARY       | PRIMARY | 4       | clusterdb.subs.dept       |      1 | Child of pushed join@1                                       |
|  1 | SIMPLE      | roles      | eq_ref | PRIMARY       | PRIMARY | 4       | clusterdb.department.name |      1 | Child of pushed join@1                                       |
+----+-------------+------------+--------+---------------+---------+---------+---------------------------+--------+--------------------------------------------------------------+</span></pre>
<p>and then re-run the query:</p>
<pre style="padding-left: 30px;"><span style="color: #800000;">mysql&gt; SELECT count(*) FROM subs, department, roles WHERE subs.country=44 AND department.id=subs.dept AND roles.dept=department.name;
+----------+
| count(*) |
+----------+
|    33334 |
+----------+
1 row in set (<span style="color: #ff6600;"><strong>0.77 sec</strong></span>)</span></pre>
<p>In this test, the query ran almost 12x faster!</p>
<h3>Running the tests (Config 1 &#8211; separate mysqld)</h3>
<p>The test was then repeated with the MySQL Server running within a VM on a 3rd host &#8211; the purpose of this is to represent the more normal configuration where the MySQL servers must communicate over the network to the data nodes. As the purpose of SPJ is to reduce the messaging between the MySQL Server and the data nodes, it&#8217;s reasonable to expect the benefits from SPJ to be more pronounced with this configuration.</p>
<p>Again, to get a baseline, ensure that SPJ is turned off:</p>
<pre style="padding-left: 30px;"><!-- BODY { FONT-FAMILY:Tahoma; FONT-SIZE:10pt } P { FONT-FAMILY:Tahoma; FONT-SIZE:10pt } DIV { FONT-FAMILY:Tahoma; FONT-SIZE:10pt } TD { FONT-FAMILY:Tahoma; FONT-SIZE:10pt } --><span style="color: #800000;">mysql&gt; set ndb_join_pushdown=off;</span></pre>
<p>and then get the output from EXPLAIN:</p>
<pre style="padding-left: 30px;"><span style="color: #800000;">mysql&gt; EXPLAIN SELECT count(*) FROM subs, department, roles WHERE subs.country=44 AND department.id=subs.dept AND roles.dept=department.name;
+----+-------------+------------+--------+---------------+---------+---------+---------------------------+--------+-----------------------------------+
| id | select_type | table      | type   | possible_keys | key     | key_len | ref                       | rows   | Extra                             |
+----+-------------+------------+--------+---------------+---------+---------+---------------------------+--------+-----------------------------------+
|  1 | SIMPLE      | subs       | ALL    | NULL          | NULL    | NULL    | NULL                      | 100000 | Using where with pushed condition |
|  1 | SIMPLE      | department | eq_ref | PRIMARY       | PRIMARY | 4       | clusterdb.subs.dept       |      1 |                                   |
|  1 | SIMPLE      | roles      | eq_ref | PRIMARY       | PRIMARY | 4       | clusterdb.department.name |      1 |                                   |
+----+-------------+------------+--------+---------------+---------+---------+---------------------------+--------+-----------------------------------+</span></pre>
<p>and then execute the query:</p>
<pre style="padding-left: 30px;"><span style="color: #800000;">mysql&gt; SELECT count(*) FROM subs, department, roles WHERE subs.country=44 AND department.id=subs.dept AND roles.dept=department.name;
+----------+
| count(*) |
+----------+
|    33334 |
+----------+
1 row in set (</span><!-- BODY { FONT-FAMILY:Tahoma; FONT-SIZE:10pt } P { FONT-FAMILY:Tahoma; FONT-SIZE:10pt } DIV { FONT-FAMILY:Tahoma; FONT-SIZE:10pt } TD { FONT-FAMILY:Tahoma; FONT-SIZE:10pt } --><span style="color: #ff6600;"><strong>1 min 2.12 sec</strong></span><span style="color: #800000;">)</span></pre>
<p>Now to see the benefits of SPJ, turn it back on:</p>
<pre style="padding-left: 30px;"><span style="color: #800000;">mysql&gt; set ndb_join_pushdown=on;</span></pre>
<p>Check  the output from EXPLAIN again:</p>
<pre style="padding-left: 30px;"><span style="color: #800000;">mysql&gt; EXPLAIN SELECT count(*) FROM subs, department, roles WHERE subs.country=44 AND department.id=subs.dept AND roles.dept=department.name;
+----+-------------+------------+--------+---------------+---------+---------+---------------------------+--------+--------------------------------------------------------------+
| id | select_type | table      | type   | possible_keys | key     | key_len | ref                       | rows   | Extra                                                        |
+----+-------------+------------+--------+---------------+---------+---------+---------------------------+--------+--------------------------------------------------------------+
|  1 | SIMPLE      | subs       | ALL    | NULL          | NULL    | NULL    | NULL                      | 100000 | Parent of 3 pushed join@1; Using where with pushed condition |
|  1 | SIMPLE      | department | eq_ref | PRIMARY       | PRIMARY | 4       | clusterdb.subs.dept       |      1 | Child of pushed join@1                                       |
|  1 | SIMPLE      | roles      | eq_ref | PRIMARY       | PRIMARY | 4       | clusterdb.department.name |      1 | Child of pushed join@1                                       |
+----+-------------+------------+--------+---------------+---------+---------+---------------------------+--------+--------------------------------------------------------------+</span></pre>
<p>and then re-run the query:</p>
<pre style="padding-left: 30px;"><span style="color: #800000;">mysql&gt; SELECT count(*) FROM subs, department, roles WHERE subs.country=44 AND department.id=subs.dept AND roles.dept=department.name;
+----------+
| count(*) |
+----------+
|    33334 |
+----------+
1 row in set (</span><strong><span style="color: #ff6600;">1.26 sec</span></strong><span style="color: #800000;">)</span></pre>
<p>In this test, the query ran almost 50x faster!</p>
<h3>Do all queries benefit from SPJ</h3>
<p>No and that&#8217;s why it&#8217;s especially important to get feedback from real users with representative schemas so that SPJ can be extended to cover as many of the significant use cases as possible.</p>
<p>As an example, using the following query I saw no speedup at all (using the local mysqld configuration):</p>
<pre style="padding-left: 30px;"><span style="color: #800000;">mysql&gt; set ndb_join_pushdown=off;

mysql&gt; EXPLAIN SELECT count(*) FROM subs, department, roles WHERE subs.country=44 AND subs.dept=department.name AND department.id=roles.dept;
+----+-------------+------------+--------+---------------+---------+---------+-------------------------+--------+-----------------------------------+
| id | select_type | table      | type   | possible_keys | key     | key_len | ref                     | rows   | Extra                             |
+----+-------------+------------+--------+---------------+---------+---------+-------------------------+--------+-----------------------------------+
|  1 | SIMPLE      | subs       | ALL    | NULL          | NULL    | NULL    | NULL                    | 100000 | Using where with pushed condition |
|  1 | SIMPLE      | department | ALL    | PRIMARY       | NULL    | NULL    | NULL                    | 100000 | Using where; Using join buffer    |
|  1 | SIMPLE      | roles      | eq_ref | PRIMARY       | PRIMARY | 4       | clusterdb.department.id |      1 |                                   |
+----+-------------+------------+--------+---------------+---------+---------+-------------------------+--------+-----------------------------------+

mysql&gt; SELECT count(*) FROM subs, department, roles WHERE subs.country=44 AND subs.dept=department.name AND department.id=roles.dept;
+----------+
| count(*) |
+----------+
|    33334 |
+----------+
1 row in set (<span style="color: #ff6600;"><strong>3 min 56.26 sec</strong></span>)</span></pre>
<pre style="padding-left: 30px;"><span style="color: #800000;">mysql&gt; set ndb_join_pushdown=on;
</span></pre>
<pre style="padding-left: 30px;"><span style="color: #800000;">mysql&gt; EXPLAIN SELECT count(*) FROM subs, department, roles WHERE subs.country=44 AND subs.dept=department.name AND department.id=roles.dept;
+----+-------------+------------+--------+---------------+---------+---------+-------------------------+--------+-----------------------------------------------------------+
| id | select_type | table      | type   | possible_keys | key     | key_len | ref                     | rows   | Extra                                                     |
+----+-------------+------------+--------+---------------+---------+---------+-------------------------+--------+-----------------------------------------------------------+
|  1 | SIMPLE      | subs       | ALL    | NULL          | NULL    | NULL    | NULL                    | 100000 | Using where with pushed condition                         |
|  1 | SIMPLE      | department | ALL    | PRIMARY       | NULL    | NULL    | NULL                    | 100000 | Parent of 2 pushed join@1; Using where; Using join buffer |
|  1 | SIMPLE      | roles      | eq_ref | PRIMARY       | PRIMARY | 4       | clusterdb.department.id |      1 | Child of pushed join@1                                    |
+----+-------------+------------+--------+---------------+---------+---------+-------------------------+--------+-----------------------------------------------------------+
</span><span style="color: #800000;">
mysql&gt; SELECT count(*) FROM subs, department, roles WHERE subs.country=44 AND subs.dept=department.name AND department.id=roles.dept;
+----------+
| count(*) |
+----------+
|    33334 |
+----------+
1 row in set (<span style="color: #ff6600;"><strong>3 min 57.76 sec</strong></span>)</span></pre>
]]></content:encoded>
					
					<wfw:commentRss>./../../mysql-cluster/trying-out-mysql-push-down-join-spj-preview/feed/index.html</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
